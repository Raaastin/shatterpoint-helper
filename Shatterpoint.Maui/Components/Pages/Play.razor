@using Shatterpoint.Lib.Services;
@using Shatterpoint.Lib.Units
@using Shatterpoint.Lib.Units.Abilities
@using Shatterpoint.Lib.Model;
@using Shatterpoint.Lib.Extensions;

@page "/play"
@inject SelectedUnitsService SelectedUnitsService
@inject UnitDataBaseService UnitDataBaseService

<div class="selected-pp">

    @if (!@SelectedUnitsService.SelectedUnits.Any())
    {
        <p>There is no selected unit. Visit /build/index to select your 6 units</p>
    }
    else
    {
        <div>
            @foreach (var unit in @SelectedUnitsService.SelectedUnits.Take(3))
            {
                <a @onclick="() => SelectUnit(unit)">
                    <img alt="@unit.Name" src="@String.Format("/img/pp/{0}", unit.ProfilePicture)" />
                </a>
            }
        </div>
        <div>
            @foreach (var unit in @SelectedUnitsService.SelectedUnits.Skip(3))
            {
                <a @onclick="() => SelectUnit(unit)">
                    <img alt="@unit.Name" src="@String.Format("/img/pp/{0}", unit.ProfilePicture)" />
                </a>
            }
        </div>
        <div>
            <a @onclick="() => PayAttention()">
                <img alt="Op turn" src="fakepath.png" />
            </a>
        </div>
    }

</div>

@if (@SelectedUnitsService.ActiveUnit is not null)
{
    /* Card: Unit active */
    <div class="dynamic-card">
        <div class="dynamic-card-title">
            <table>
                <tr>
                    <td>
                        <img alt="@SelectedUnitsService.ActiveUnit.ActiveUnit.ProfilePicture" src="@String.Format("/img/pp/{0}", SelectedUnitsService.ActiveUnit.ActiveUnit.ProfilePicture)" />
                    </td>
                    <td>
                        <div>@SelectedUnitsService.ActiveUnit.ActiveUnit.Name</div>
                    </td>
                </tr>
            </table>
        </div>
        <div class="dynamic-card-content">
            <table>
                @foreach (var ability in @SelectedUnitsService.ActiveUnit.CurrentActivationSynergies)
                {
                    @if (ability is not null)
                    {
                        <tr>
                            <td><img alt="@ability.Weilder" src="@String.Format("/img/pp/{0}", ability.WeilderProfilePicture)" /></td>
                            <td><img alt="@ability.Type.ToString()" src="@String.Format("/img/abilities/{0}.png", ability.Type)" /></td>
                            <td>
                                <div class="ability-content">
                                    <div class="ability-title">
                                        <h4>@ability.Name</h4>
                                        @for (int i = 0; i < ability.Cost; i++)
                                        {
                                            <div>
                                                <img class="force-logo" alt="Cost" src="/img/abilities/force.png" />
                                            </div>
                                        }
                                    </div>
                                    <p>
                                        @((MarkupString)@ability.Text.ToRawHtmlDescription())
                                    </p>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>

    /* Card: Unit is targeted*/
    @if (@SelectedUnitsService.ActiveUnit.GettingTargetedSynegies.Any())
    {
        <div class="dynamic-card">
            <div class="dynamic-card-title">
                <table>
                    <tr>
                        <td>
                            <img alt="@SelectedUnitsService.ActiveUnit.ActiveUnit.ProfilePicture" src="@String.Format("/img/pp/{0}", SelectedUnitsService.ActiveUnit.ActiveUnit.ProfilePicture)" />
                        </td>
                        <td>
                            <div>@SelectedUnitsService.ActiveUnit.ActiveUnit.Name</div>
                        </td>
                    </tr>
                </table>
            </div>
            <div class="dynamic-card-content">
                <table>
                    @foreach (var ability in @SelectedUnitsService.ActiveUnit.GettingTargetedSynegies)
                    {
                        @if (ability is not null)
                        {
                            <tr>
                                <td><img alt="@ability.Weilder" src="@String.Format("/img/pp/{0}", ability.WeilderProfilePicture)" /></td>
                                <td><img alt="@ability.Type.ToString()" src="@String.Format("/img/abilities/{0}.png", ability.Type)" /></td>
                                <td>
                                    <div class="ability-content">
                                        <div class="ability-title">
                                            <h4>@ability.Name</h4>
                                            @for (int i = 0; i < ability.Cost; i++)
                                            {
                                                <div>
                                                    <img class="force-logo" alt="Cost" src="/img/abilities/force.png" />
                                                </div>
                                            }
                                        </div>
                                        <p>
                                            @((MarkupString)@ability.Text.ToRawHtmlDescription())
                                        </p>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div>
    }
}

@if (@SelectedUnitsService.PayAttentionAbilities is not null && @SelectedUnitsService.PayAttentionAbilities.Any())
{
    /* Card: Unit active */
    <div class="dynamic-card">
        <div class="dynamic-card-title">
            <table>
                <tr>
                    <td>
                        <div>Pay Attention</div>
                    </td>
                </tr>
            </table>
        </div>
        <div class="dynamic-card-content">
            <table>
                @foreach (var ability in @SelectedUnitsService.PayAttentionAbilities)
                {
                    @if (ability is not null)
                    {
                        <tr>
                            <td><img alt="@ability.Weilder" src="@String.Format("/img/pp/{0}", ability.WeilderProfilePicture)" /></td>
                            <td><img alt="@ability.Type.ToString()" src="@String.Format("/img/abilities/{0}.png", ability.Type)" /></td>
                            <td>
                                <div class="ability-content">
                                    <div class="ability-title">
                                        <h4>@ability.Name</h4>
                                        @for (int i = 0; i < ability.Cost; i++)
                                        {
                                            <div>
                                                <img class="force-logo" alt="Cost" src="/img/abilities/force.png" />
                                            </div>
                                        }
                                    </div>
                                    <p>
                                        @((MarkupString)@ability.Text.ToRawHtmlDescription())
                                    </p>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
}

@code {

    public void SelectUnit(Unit unit)
    {
        // Disable "pay attention" abilities
        SelectedUnitsService.PayAttentionAbilities = null;

        var activeAbilities = SelectedUnitsService.ActivateUnit(unit);
        var targetedAbilities = SelectedUnitsService.GettingTargeted(unit);

        SelectedUnitsService.ActiveUnit = new ActiveUnitModel();
        SelectedUnitsService.ActiveUnit.ActiveUnit = unit;
        SelectedUnitsService.ActiveUnit.CurrentActivationSynergies = activeAbilities;
        SelectedUnitsService.ActiveUnit.GettingTargetedSynegies = targetedAbilities;

    }

    public void PayAttention()
    {
        // Disable active unit:
        SelectedUnitsService.ActiveUnit = null;

        var abilities = SelectedUnitsService.PayAttention();
        SelectedUnitsService.PayAttentionAbilities = abilities;
    }
}
