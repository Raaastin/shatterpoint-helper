@using Shatterpoint.Lib.Extensions
@using Shatterpoint.Lib.Units
@using Shatterpoint.Lib.Units.Abilities
@using Shatterpoint.Lib.Data;


<div class="dynamic-card">
    <div class="dynamic-card-title">
        <table>
            <tr>
                <td>
                    <ProfilePicture Unit="@Unit" Scale="0.5" />
                </td>
                <td>
                    <div>@Unit.Name</div>
                </td>
            </tr>
        </table>
    </div>
    <div class="dynamic-card-content">
        <table>
            @foreach (var ability in @Abilities)
            {
                @if (ability is not null)
                {
                    <tr>
                        <td>
                            @if (ability.Weilder.Name != @Unit.Name)
                            {
                                <div class="specific-ability-weilder">
                                    <ProfilePicture Unit="@ability.Weilder" Scale="0.3" />
                                </div>
                            }
                            <img class="ability-type" alt="@ability.Type.ToString()" src="@String.Format("/img/abilities/{0}.png", ability.Type)" />
                        </td>
                        <td>
                            <div class="ability-content">
                                <div class="ability-title">
                                    <h4>@ability.Name</h4>
                                    @for (int i = 0; i < ability.Cost; i++)
                                    {
                                        <div>
                                            <img class="force-logo" alt="Cost" src="@IconReferences.forceicon" />
                                        </div>
                                    }
                                </div>
                                <p>
                                    @((MarkupString)@ability.Text.ToRawHtmlDescription())
                                </p>
                            </div>
                        </td>
                    </tr>
                }
            }
        </table>
    </div>
</div>

@code {

    [Parameter]
    public Unit Unit { get; set; }

    [Parameter]
    public List<Ability> Abilities { get; set; }
}
